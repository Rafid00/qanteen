import React, { useEffect, useState } from "react";
import NavContext from "./NavContext";
import { useNavigate } from "react-router-dom";
import SearchSuggestionsList from "./SearchSuggestionsList";

const Navbar = () => {
   const { navOpen, setNavOpen } = React.useContext(NavContext);
   const [data, setData] = useState("");
   const [search, setSearch] = useState("");
   const navigate = useNavigate();
   const isLoggedIn = localStorage.getItem("loggedIn");

   const logout = () => {
      localStorage.clear();
      alert("Logged out successfully");
      window.location.reload();
   };

   const submitHandler = (e) => {
      e.preventDefault();
      navigate("/search/" + search);
   };

   return (
      <NavContext.Provider value={{ data, setData }}>
         <nav className={`h-[170px] transition-all duration-300 ${navOpen ? "pb-0 md:pb-0" : "pb-[400px] md:pb-0"}`}>
            <div className="navbar bg-base-100 px-[10%] md:px-24 py-6 relative z-50">
               <div className="navbar-start">
                  <label className="btn btn-circle swap swap-rotate">
                     <input type="checkbox" onClick={() => setNavOpen(!navOpen)} />

                     <svg className="swap-off fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 512 512">
                        <path d="M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z" />
                     </svg>

                     <svg className="swap-on fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 512 512">
                        <polygon points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49" />
                     </svg>
                  </label>
               </div>
               <div className="navbar-center">
                  <a href="/" className="hidden xl:inline-flex cursor-pointer hover:scale-105 transition-all duration-300">
                     <svg width="90" viewBox="0 0 254 41" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                           d="M32.2656 40.0312L27.9531 35.9531C27.7656 35.9844 27.5625 36 27.3438 36C27.1406 36 26.9453 36 26.7578 36H15.5781C13.25 36 11.1328 35.5625 9.22656 34.6875C7.32031 33.8125 5.6875 32.6172 4.32812 31.1016C2.98438 29.5859 1.94531 27.8047 1.21094 25.7578C0.476562 23.7109 0.109375 21.5234 0.109375 19.1953C0.109375 16.8828 0.476562 14.7109 1.21094 12.6797C1.94531 10.6328 2.98438 8.85156 4.32812 7.33594C5.6875 5.80469 7.32031 4.60156 9.22656 3.72656C11.1328 2.83594 13.25 2.39062 15.5781 2.39062H26.7578C29.0703 2.39062 31.1719 2.83594 33.0625 3.72656C34.9531 4.60156 36.5703 5.80469 37.9141 7.33594C39.2734 8.85156 40.3203 10.6328 41.0547 12.6797C41.7891 14.7109 42.1562 16.8828 42.1562 19.1953C42.1562 20.9297 41.9453 22.5938 41.5234 24.1875C41.1172 25.7656 40.5234 27.2266 39.7422 28.5703C38.9609 29.8984 38.0078 31.0859 36.8828 32.1328C35.7734 33.1641 34.5234 34.0078 33.1328 34.6641L38.7578 40.0312H32.2656ZM37.3516 19.1953C37.3516 17.5391 37.1094 15.9844 36.625 14.5312C36.1406 13.0781 35.4375 11.8125 34.5156 10.7344C33.6094 9.64062 32.5 8.78125 31.1875 8.15625C29.8906 7.51562 28.4141 7.19531 26.7578 7.19531H15.5781C13.9219 7.19531 12.4297 7.51562 11.1016 8.15625C9.78906 8.78125 8.67188 9.64062 7.75 10.7344C6.84375 11.8125 6.14062 13.0781 5.64062 14.5312C5.15625 15.9844 4.91406 17.5391 4.91406 19.1953C4.91406 20.8516 5.15625 22.4141 5.64062 23.8828C6.14062 25.3359 6.84375 26.6094 7.75 27.7031C8.67188 28.7812 9.78906 29.6328 11.1016 30.2578C12.4297 30.8828 13.9219 31.1953 15.5781 31.1953H22.9609L18.3906 26.8359H25.1172L29.2891 30.9141C30.5547 30.6172 31.6875 30.1094 32.6875 29.3906C33.6875 28.6562 34.5312 27.7734 35.2188 26.7422C35.9219 25.7109 36.4531 24.5547 36.8125 23.2734C37.1719 21.9922 37.3516 20.6328 37.3516 19.1953ZM77.7812 36H53.7812C52.6094 36 51.5156 35.7812 50.5 35.3438C49.4844 34.9062 48.5938 34.3125 47.8281 33.5625C47.0625 32.7969 46.4609 31.9062 46.0234 30.8906C45.5859 29.8594 45.3672 28.7656 45.3672 27.6094C45.3672 26.4375 45.5859 25.3438 46.0234 24.3281C46.4609 23.3125 47.0625 22.4219 47.8281 21.6562C48.5938 20.8906 49.4844 20.2891 50.5 19.8516C51.5156 19.4141 52.6094 19.1953 53.7812 19.1953H70.5625V24H53.7812C53.2812 24 52.8125 24.1016 52.375 24.3047C51.9375 24.4922 51.5547 24.75 51.2266 25.0781C50.8984 25.4062 50.6406 25.7891 50.4531 26.2266C50.2656 26.6641 50.1719 27.125 50.1719 27.6094C50.1719 28.1094 50.2656 28.5781 50.4531 29.0156C50.6406 29.4375 50.8984 29.8125 51.2266 30.1406C51.5547 30.4688 51.9375 30.7266 52.375 30.9141C52.8125 31.1016 53.2812 31.1953 53.7812 31.1953H72.9766V18C72.9766 17.5156 72.875 17.0547 72.6719 16.6172C72.4844 16.1797 72.2266 15.7969 71.8984 15.4688C71.5703 15.1406 71.1875 14.8828 70.75 14.6953C70.3125 14.4922 69.8516 14.3906 69.3672 14.3906H50.1719V9.60938H69.3672C70.5391 9.60938 71.6328 9.82812 72.6484 10.2656C73.6641 10.7031 74.5547 11.3047 75.3203 12.0703C76.0859 12.8203 76.6875 13.7031 77.125 14.7188C77.5625 15.7344 77.7812 16.8281 77.7812 18V36ZM89.3125 36H84.5078V9.60938H102.508C104.32 9.60938 106.023 9.96094 107.617 10.6641C109.211 11.3516 110.602 12.2969 111.789 13.5C112.977 14.6875 113.914 16.0859 114.602 17.6953C115.289 19.2891 115.633 20.9922 115.633 22.8047V36H110.828V22.8047C110.828 21.6484 110.609 20.5625 110.172 19.5469C109.734 18.5312 109.141 17.6484 108.391 16.8984C107.641 16.1328 106.758 15.5312 105.742 15.0938C104.742 14.6406 103.664 14.4062 102.508 14.3906H89.3125V36ZM130.961 36H126.156V14.3906H118.961V9.60938H126.156V0H130.961V9.60938H147.766V14.3906H130.961V36ZM181.938 18C181.938 19.1719 181.719 20.2656 181.281 21.2812C180.844 22.2969 180.242 23.1875 179.477 23.9531C178.727 24.7031 177.836 25.2969 176.805 25.7344C175.789 26.1719 174.703 26.3906 173.547 26.3906H155.148C155.492 27.0938 155.922 27.7422 156.438 28.3359C156.953 28.9297 157.531 29.4375 158.172 29.8594C158.812 30.2812 159.508 30.6094 160.258 30.8438C161.023 31.0781 161.82 31.1953 162.648 31.1953H178.352V36H162.648C160.836 35.9844 159.133 35.6328 157.539 34.9453C155.945 34.2422 154.555 33.2969 153.367 32.1094C152.195 30.9062 151.266 29.5078 150.578 27.9141C149.891 26.3203 149.547 24.6172 149.547 22.8047C149.547 20.9922 149.891 19.2891 150.578 17.6953C151.266 16.1016 152.195 14.7109 153.367 13.5234C154.555 12.3203 155.945 11.375 157.539 10.6875C159.133 9.98438 160.836 9.625 162.648 9.60938H173.547C174.703 9.60938 175.789 9.82812 176.805 10.2656C177.836 10.7031 178.727 11.3047 179.477 12.0703C180.242 12.8203 180.844 13.7031 181.281 14.7188C181.719 15.7344 181.938 16.8281 181.938 18ZM173.547 21.6094C174.031 21.6094 174.492 21.5156 174.93 21.3281C175.367 21.1406 175.75 20.8828 176.078 20.5547C176.406 20.2266 176.664 19.8438 176.852 19.4062C177.039 18.9688 177.133 18.5 177.133 18C177.133 17.5156 177.039 17.0547 176.852 16.6172C176.664 16.1797 176.406 15.7969 176.078 15.4688C175.75 15.1406 175.367 14.8828 174.93 14.6953C174.492 14.4922 174.031 14.3906 173.547 14.3906H162.648C161.586 14.3906 160.586 14.5781 159.648 14.9531C158.727 15.3281 157.898 15.8438 157.164 16.5C156.445 17.1406 155.844 17.9062 155.359 18.7969C154.891 19.6719 154.586 20.6094 154.445 21.6094H173.547ZM217.375 18C217.375 19.1719 217.156 20.2656 216.719 21.2812C216.281 22.2969 215.68 23.1875 214.914 23.9531C214.164 24.7031 213.273 25.2969 212.242 25.7344C211.227 26.1719 210.141 26.3906 208.984 26.3906H190.586C190.93 27.0938 191.359 27.7422 191.875 28.3359C192.391 28.9297 192.969 29.4375 193.609 29.8594C194.25 30.2812 194.945 30.6094 195.695 30.8438C196.461 31.0781 197.258 31.1953 198.086 31.1953H213.789V36H198.086C196.273 35.9844 194.57 35.6328 192.977 34.9453C191.383 34.2422 189.992 33.2969 188.805 32.1094C187.633 30.9062 186.703 29.5078 186.016 27.9141C185.328 26.3203 184.984 24.6172 184.984 22.8047C184.984 20.9922 185.328 19.2891 186.016 17.6953C186.703 16.1016 187.633 14.7109 188.805 13.5234C189.992 12.3203 191.383 11.375 192.977 10.6875C194.57 9.98438 196.273 9.625 198.086 9.60938H208.984C210.141 9.60938 211.227 9.82812 212.242 10.2656C213.273 10.7031 214.164 11.3047 214.914 12.0703C215.68 12.8203 216.281 13.7031 216.719 14.7188C217.156 15.7344 217.375 16.8281 217.375 18ZM208.984 21.6094C209.469 21.6094 209.93 21.5156 210.367 21.3281C210.805 21.1406 211.188 20.8828 211.516 20.5547C211.844 20.2266 212.102 19.8438 212.289 19.4062C212.477 18.9688 212.57 18.5 212.57 18C212.57 17.5156 212.477 17.0547 212.289 16.6172C212.102 16.1797 211.844 15.7969 211.516 15.4688C211.188 15.1406 210.805 14.8828 210.367 14.6953C209.93 14.4922 209.469 14.3906 208.984 14.3906H198.086C197.023 14.3906 196.023 14.5781 195.086 14.9531C194.164 15.3281 193.336 15.8438 192.602 16.5C191.883 17.1406 191.281 17.9062 190.797 18.7969C190.328 19.6719 190.023 20.6094 189.883 21.6094H208.984ZM226.891 36H222.086V9.60938H240.086C241.898 9.60938 243.602 9.96094 245.195 10.6641C246.789 11.3516 248.18 12.2969 249.367 13.5C250.555 14.6875 251.492 16.0859 252.18 17.6953C252.867 19.2891 253.211 20.9922 253.211 22.8047V36H248.406V22.8047C248.406 21.6484 248.188 20.5625 247.75 19.5469C247.312 18.5312 246.719 17.6484 245.969 16.8984C245.219 16.1328 244.336 15.5312 243.32 15.0938C242.32 14.6406 241.242 14.4062 240.086 14.3906H226.891V36Z"
                           fill="#FF0000"
                        />
                     </svg>
                  </a>
               </div>
               <div className="navbar-end">
                  <div className="form-control">
                     <form onSubmit={submitHandler}>
                        <div className="input-group">
                           <input
                              type="text"
                              placeholder="Search your recipe"
                              className="input input-bordered w-[40vw] sm:w-full"
                              onChange={(e) => setSearch(e.target.value)}
                              value={search}
                           />
                           {search.length > 0 && <SearchSuggestionsList search={search} />}

                           <button className="btn btn-square" type="submit">
                              <svg
                                 xmlns="http://www.w3.org/2000/svg"
                                 className="h-6 w-6"
                                 fill="none"
                                 viewBox="0 0 24 24"
                                 stroke="currentColor"
                              >
                                 <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                                 />
                              </svg>
                           </button>
                        </div>
                     </form>
                  </div>
               </div>
            </div>

            <div
               className={`sidebar absolute left-0 w-full h-12 transition-all duration-300 z-0 ${
                  navOpen ? "-top-56 md:top-0" : "top-28 md:top-24"
               }`}
            >
               <ul className="menu bg-base-100 text-base-content uppercase text-sm font-medium flex flex-col p-1 gap-5 items-center lg:gap-20 md:flex-row justify-center w-full">
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/profile">
                        Profile
                     </a>
                  </li>
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/advanced">
                        Advanced
                     </a>
                  </li>
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/">
                        Home
                     </a>
                  </li>

                  <li>
                     {isLoggedIn ? (
                        <a className="w-[120px] flex justify-center scale-90" href="/explore">
                           Explore
                        </a>
                     ) : (
                        <a className="w-[120px] flex justify-center scale-90" href="/login">
                           Login
                        </a>
                     )}
                  </li>
                  <li>
                     {isLoggedIn ? (
                        <button
                           onClick={logout}
                           className="w-[120px] flex justify-center scale-90 uppercase bg-red-400 text-white"
                           href="/logout"
                        >
                           Logout
                        </button>
                     ) : (
                        <a className="w-[120px] flex justify-center scale-90" href="/register">
                           Register
                        </a>
                     )}
                  </li>
               </ul>
            </div>
         </nav>
      </NavContext.Provider>
   );
};

export default Navbar;
