import React, { useEffect, useState } from "react";
import NavContext from "./NavContext";
import {useNavigate} from "react-router-dom";
import SearchSuggestionsList from "./SearchSuggestionsList";

const Navbar = () => {
   const { navOpen, setNavOpen } = React.useContext(NavContext);
   const [data, setData] = useState('');
   const [search, setSearch] = useState('');
   const navigate = useNavigate();
   const isLoggedIn = localStorage.getItem("loggedIn");

   const logout = () => {
      localStorage.clear();
      alert("Logged out successfully");
      window.location.reload();
   }

   const submitHandler = (e) =>{
      e.preventDefault();
      navigate("/searched/" + search);
   }

   return (
      <NavContext.Provider value={{ data, setData }}>
         <nav className={`h-[170px] transition-all duration-300 ${navOpen ? "pb-0 md:pb-0" : "pb-[400px] md:pb-0"}`}>
            <div className="navbar bg-base-100 px-[10%] md:px-24 py-6 relative z-50">
               <div className="navbar-start">
                  <label className="btn btn-circle swap swap-rotate">
                     <input type="checkbox" onClick={() => setNavOpen(!navOpen)} />

                     <svg className="swap-off fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 512 512">
                        <path d="M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z" />
                     </svg>

                     <svg className="swap-on fill-current" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 512 512">
                        <polygon points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49" />
                     </svg>
                  </label>
               </div>
               <div className="navbar-center">
                  <a href="/" className="hidden xl:inline-flex cursor-pointer hover:scale-105 transition-all duration-300">
                     <svg width="90" viewBox="0 0 227 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                           d="M39.1328 26.3906C39.1328 27.7344 38.8828 28.9922 38.3828 30.1641C37.8828 31.3203 37.1953 32.3359 36.3203 33.2109C35.4609 34.0703 34.4453 34.75 33.2734 35.25C32.1172 35.75 30.875 36 29.5469 36H0.34375V31.1953H29.5469C30.2188 31.1953 30.8438 31.0703 31.4219 30.8203C32 30.5703 32.5 30.2266 32.9219 29.7891C33.3594 29.3516 33.7031 28.8438 33.9531 28.2656C34.2031 27.6719 34.3281 27.0469 34.3281 26.3906C34.3281 25.7344 34.2031 25.1172 33.9531 24.5391C33.7031 23.9609 33.3594 23.4531 32.9219 23.0156C32.5 22.5781 32 22.2344 31.4219 21.9844C30.8438 21.7344 30.2188 21.6094 29.5469 21.6094H9.95312C8.64062 21.6094 7.39844 21.3594 6.22656 20.8594C5.05469 20.3594 4.03125 19.6797 3.15625 18.8203C2.29688 17.9453 1.60938 16.9219 1.09375 15.75C0.59375 14.5781 0.34375 13.3281 0.34375 12C0.34375 10.6875 0.59375 9.44531 1.09375 8.27344C1.60938 7.10156 2.29688 6.08594 3.15625 5.22656C4.03125 4.35156 5.05469 3.66406 6.22656 3.16406C7.39844 2.64844 8.64062 2.39062 9.95312 2.39062H36.7422V7.19531H9.95312C9.29688 7.19531 8.67188 7.32031 8.07812 7.57031C7.5 7.82031 6.99219 8.16406 6.55469 8.60156C6.11719 9.03906 5.77344 9.55469 5.52344 10.1484C5.27344 10.7266 5.14844 11.3438 5.14844 12C5.14844 12.6562 5.27344 13.2812 5.52344 13.875C5.77344 14.4531 6.11719 14.9609 6.55469 15.3984C6.99219 15.8359 7.5 16.1797 8.07812 16.4297C8.67188 16.6797 9.29688 16.8047 9.95312 16.8047H29.5469C30.875 16.8047 32.1172 17.0625 33.2734 17.5781C34.4453 18.0781 35.4609 18.7656 36.3203 19.6406C37.1953 20.5 37.8828 21.5156 38.3828 22.6875C38.8828 23.8438 39.1328 25.0781 39.1328 26.3906ZM74.2656 36H50.2656C49.0938 36 48 35.7812 46.9844 35.3438C45.9688 34.9062 45.0781 34.3125 44.3125 33.5625C43.5469 32.7969 42.9453 31.9062 42.5078 30.8906C42.0703 29.8594 41.8516 28.7656 41.8516 27.6094C41.8516 26.4375 42.0703 25.3438 42.5078 24.3281C42.9453 23.3125 43.5469 22.4219 44.3125 21.6562C45.0781 20.8906 45.9688 20.2891 46.9844 19.8516C48 19.4141 49.0938 19.1953 50.2656 19.1953H67.0469V24H50.2656C49.7656 24 49.2969 24.1016 48.8594 24.3047C48.4219 24.4922 48.0391 24.75 47.7109 25.0781C47.3828 25.4062 47.125 25.7891 46.9375 26.2266C46.75 26.6641 46.6562 27.125 46.6562 27.6094C46.6562 28.1094 46.75 28.5781 46.9375 29.0156C47.125 29.4375 47.3828 29.8125 47.7109 30.1406C48.0391 30.4688 48.4219 30.7266 48.8594 30.9141C49.2969 31.1016 49.7656 31.1953 50.2656 31.1953H69.4609V18C69.4609 17.5156 69.3594 17.0547 69.1562 16.6172C68.9688 16.1797 68.7109 15.7969 68.3828 15.4688C68.0547 15.1406 67.6719 14.8828 67.2344 14.6953C66.7969 14.4922 66.3359 14.3906 65.8516 14.3906H46.6562V9.60938H65.8516C67.0234 9.60938 68.1172 9.82812 69.1328 10.2656C70.1484 10.7031 71.0391 11.3047 71.8047 12.0703C72.5703 12.8203 73.1719 13.7031 73.6094 14.7188C74.0469 15.7344 74.2656 16.8281 74.2656 18V36ZM112.211 9.60938L97.6328 36H92.1484L77.6641 9.60938H83.2656L94.8906 31.0078L106.609 9.60938H112.211ZM147.367 22.8047C147.367 24.6172 147.023 26.3203 146.336 27.9141C145.648 29.5078 144.711 30.9062 143.523 32.1094C142.352 33.2969 140.969 34.2422 139.375 34.9453C137.781 35.6328 136.078 35.9844 134.266 36H126.883C125.07 35.9844 123.367 35.6328 121.773 34.9453C120.18 34.2422 118.789 33.2969 117.602 32.1094C116.43 30.9062 115.5 29.5078 114.812 27.9141C114.125 26.3203 113.781 24.6172 113.781 22.8047C113.781 20.9922 114.125 19.2891 114.812 17.6953C115.5 16.0859 116.43 14.6875 117.602 13.5C118.789 12.2969 120.18 11.3516 121.773 10.6641C123.367 9.96094 125.07 9.60938 126.883 9.60938H134.266C135.469 9.60938 136.633 9.76562 137.758 10.0781C138.883 10.3906 139.93 10.8359 140.898 11.4141C141.867 11.9922 142.75 12.6875 143.547 13.5C144.344 14.2969 145.023 15.1875 145.586 16.1719C146.148 17.1406 146.586 18.1875 146.898 19.3125C147.211 20.4375 147.367 21.6016 147.367 22.8047ZM142.586 22.8047C142.586 21.6484 142.367 20.5625 141.93 19.5469C141.492 18.5312 140.898 17.6484 140.148 16.8984C139.398 16.1328 138.516 15.5312 137.5 15.0938C136.5 14.6406 135.422 14.4062 134.266 14.3906H126.883C125.727 14.4062 124.641 14.6406 123.625 15.0938C122.625 15.5312 121.75 16.1328 121 16.8984C120.25 17.6484 119.656 18.5312 119.219 19.5469C118.797 20.5625 118.586 21.6484 118.586 22.8047C118.586 23.9609 118.797 25.0469 119.219 26.0625C119.656 27.0781 120.25 27.9688 121 28.7344C121.75 29.4844 122.625 30.0859 123.625 30.5391C124.641 30.9766 125.727 31.1953 126.883 31.1953H134.266C135.422 31.1953 136.5 30.9766 137.5 30.5391C138.516 30.0859 139.398 29.4844 140.148 28.7344C140.898 27.9688 141.492 27.0781 141.93 26.0625C142.367 25.0469 142.586 23.9609 142.586 22.8047ZM178.844 14.3906H160.844C160.344 14.3906 159.875 14.4922 159.438 14.6953C159 14.8828 158.617 15.1406 158.289 15.4688C157.961 15.7969 157.703 16.1797 157.516 16.6172C157.328 17.0547 157.234 17.5156 157.234 18V36H152.43V18C152.43 16.8281 152.648 15.7344 153.086 14.7188C153.523 13.7031 154.125 12.8203 154.891 12.0703C155.656 11.3047 156.547 10.7031 157.562 10.2656C158.578 9.82812 159.672 9.60938 160.844 9.60938H178.844V14.3906ZM188.711 3.60938C188.711 4.10937 188.617 4.57812 188.43 5.01562C188.242 5.4375 187.984 5.8125 187.656 6.14062C187.328 6.46875 186.945 6.72656 186.508 6.91406C186.07 7.10156 185.609 7.19531 185.125 7.19531C184.625 7.19531 184.156 7.10156 183.719 6.91406C183.281 6.72656 182.898 6.46875 182.57 6.14062C182.242 5.8125 181.984 5.4375 181.797 5.01562C181.609 4.57812 181.516 4.10937 181.516 3.60938C181.516 3.125 181.609 2.66406 181.797 2.22656C181.984 1.78906 182.242 1.40625 182.57 1.07812C182.898 0.75 183.281 0.492188 183.719 0.304688C184.156 0.101562 184.625 0 185.125 0C185.609 0 186.07 0.101562 186.508 0.304688C186.945 0.492188 187.328 0.75 187.656 1.07812C187.984 1.40625 188.242 1.78906 188.43 2.22656C188.617 2.66406 188.711 3.125 188.711 3.60938ZM187.516 36H182.711V9.60938H187.516V36ZM226.352 22.8047C226.352 24.6172 226.008 26.3203 225.32 27.9141C224.633 29.5078 223.695 30.9062 222.508 32.1094C221.336 33.2969 219.953 34.2422 218.359 34.9453C216.766 35.6328 215.062 35.9844 213.25 36H205.867C204.055 35.9844 202.352 35.6328 200.758 34.9453C199.164 34.2422 197.773 33.2969 196.586 32.1094C195.414 30.9062 194.484 29.5078 193.797 27.9141C193.109 26.3203 192.766 24.6172 192.766 22.8047C192.766 20.9922 193.109 19.2891 193.797 17.6953C194.484 16.0859 195.414 14.6875 196.586 13.5C197.773 12.2969 199.164 11.3516 200.758 10.6641C202.352 9.96094 204.055 9.60938 205.867 9.60938H213.25C214.453 9.60938 215.617 9.76562 216.742 10.0781C217.867 10.3906 218.914 10.8359 219.883 11.4141C220.852 11.9922 221.734 12.6875 222.531 13.5C223.328 14.2969 224.008 15.1875 224.57 16.1719C225.133 17.1406 225.57 18.1875 225.883 19.3125C226.195 20.4375 226.352 21.6016 226.352 22.8047ZM221.57 22.8047C221.57 21.6484 221.352 20.5625 220.914 19.5469C220.477 18.5312 219.883 17.6484 219.133 16.8984C218.383 16.1328 217.5 15.5312 216.484 15.0938C215.484 14.6406 214.406 14.4062 213.25 14.3906H205.867C204.711 14.4062 203.625 14.6406 202.609 15.0938C201.609 15.5312 200.734 16.1328 199.984 16.8984C199.234 17.6484 198.641 18.5312 198.203 19.5469C197.781 20.5625 197.57 21.6484 197.57 22.8047C197.57 23.9609 197.781 25.0469 198.203 26.0625C198.641 27.0781 199.234 27.9688 199.984 28.7344C200.734 29.4844 201.609 30.0859 202.609 30.5391C203.625 30.9766 204.711 31.1953 205.867 31.1953H213.25C214.406 31.1953 215.484 30.9766 216.484 30.5391C217.5 30.0859 218.383 29.4844 219.133 28.7344C219.883 27.9688 220.477 27.0781 220.914 26.0625C221.352 25.0469 221.57 23.9609 221.57 22.8047Z"
                           fill="#FF0000"
                        />
                     </svg>
                  </a>
               </div>
               <div className="navbar-end">
                  <div className="form-control">
                     <form onSubmit = {submitHandler}>
                     <div className="input-group">
                        <input
                           type="text"
                           placeholder="Search your recipe"
                           className="input input-bordered w-[40vw] sm:w-full"
                           onChange={(e) => setSearch(e.target.value)}
                           value={search}
                        />
                        {search.length > 0 && <SearchSuggestionsList search={search} />}
                     
                        <button className="btn btn-square" type = "submit" >
                           <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-6 w-6"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                           >
                              <path
                                 strokeLinecap="round"
                                 strokeLinejoin="round"
                                 strokeWidth="2"
                                 d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                              />
                           </svg>
                        </button>
                     </div>
                     </form>
                  </div>
               </div>
            </div>

            <div
               className={`sidebar absolute left-0 w-full h-12 transition-all duration-300 z-0 ${
                  navOpen ? "-top-56 md:top-0" : "top-28 md:top-24"
               }`}
            >
               <ul className="menu bg-base-100 text-base-content uppercase text-sm font-medium flex flex-col p-1 gap-5 items-center lg:gap-20 md:flex-row justify-center w-full">
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/profile">
                        Profile
                     </a>
                  </li>
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/advanced">
                        Advanced
                     </a>
                  </li>
                  <li>
                     <a className="w-[120px] flex justify-center scale-90" href="/">
                        Home
                     </a>
                  </li>

                  <li>
                     {isLoggedIn ? (
                        <a className="w-[120px] flex justify-center scale-90" href="/explore">
                           Explore
                        </a>
                     ) : (
                        <a className="w-[120px] flex justify-center scale-90" href="/login">
                           Login
                        </a>
                     )}
                  </li>
                  <li>
                     {isLoggedIn ? (
                        <button onClick={logout} className="w-[120px] flex justify-center scale-90 uppercase bg-red-400 text-white" href="/logout">
                           Logout
                        </button>
                     ) : (
                        <a className="w-[120px] flex justify-center scale-90" href="/register">
                           Register
                        </a>
                     )}
                  </li>
               </ul>
            </div>
         </nav>
      </NavContext.Provider>
   );
};

export default Navbar;